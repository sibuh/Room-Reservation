// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: rooms.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getRoom = `-- name: GetRoom :one
select id, room_number, user_id, hotel_id, price, status, created_at, updated_at from rooms where id =$1
`

func (q *Queries) GetRoom(ctx context.Context, id pgtype.UUID) (Room, error) {
	row := q.db.QueryRow(ctx, getRoom, id)
	var i Room
	err := row.Scan(
		&i.ID,
		&i.RoomNumber,
		&i.UserID,
		&i.HotelID,
		&i.Price,
		&i.Status,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateRoom = `-- name: UpdateRoom :one
update rooms set status =$1,user_id =$2 
where id= $3  
returning id, room_number, user_id, hotel_id, price, status, created_at, updated_at
`

type UpdateRoomParams struct {
	Status RoomStatus
	UserID pgtype.UUID
	ID     pgtype.UUID
}

func (q *Queries) UpdateRoom(ctx context.Context, arg UpdateRoomParams) (Room, error) {
	row := q.db.QueryRow(ctx, updateRoom, arg.Status, arg.UserID, arg.ID)
	var i Room
	err := row.Scan(
		&i.ID,
		&i.RoomNumber,
		&i.UserID,
		&i.HotelID,
		&i.Price,
		&i.Status,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
